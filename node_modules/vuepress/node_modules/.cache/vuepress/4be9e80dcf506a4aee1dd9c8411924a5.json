{"remainingRequest":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/mypro/history/gitpro/hxl888.github.io/docs/pages/javascript/numSort.md?vue&type=template&id=09300da0","dependencies":[{"path":"/Users/mypro/history/gitpro/hxl888.github.io/docs/pages/javascript/numSort.md","mtime":1723100283627},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/babel-loader/lib/index.js","mtime":1723084153686},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1718962895631},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/index.js","mtime":1718962895631},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1723084153489}],"contextDependencies":[],"result":["var render = function render() {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c('div', {\n    staticClass: \"content\"\n  }, [_vm._ssrNode(\"<h1 id=\\\"js排序算法\\\"><a href=\\\"#js排序算法\\\" class=\\\"header-anchor\\\">#</a> js排序算法</h1><h3 id=\\\"冒泡排序\\\"><a href=\\\"#冒泡排序\\\" class=\\\"header-anchor\\\">#</a> 冒泡排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>function bubbleSort(arr) {\\n    var len = arr.length, a, b;\\n    for (a = 0; a &lt; len; a++) {\\n        for (b = 0; b &lt; len - a - 1; b++) {\\n            if (arr[b] &gt; arr[b + 1]) {\\n                [arr[b], arr[b + 1]] = [arr[b + 1], arr[b]];\\n            }\\n        }\\n    }\\n    return arr;\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\nbubbleSort(a);\\n</code></pre></div><h3 id=\\\"选择排序\\\"><a href=\\\"#选择排序\\\" class=\\\"header-anchor\\\">#</a> 选择排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>var selectionSort = function (arr) {\\n  var len = arr.length, a, b, minIndex;\\n  for (a = 0; a &lt; len - 1; a++) {\\n   minIndex = a;\\n      for (b = a + 1; b &lt; len; b++) {\\n          if (arr[minIndex] &gt; arr[b]) minIndex = b;\\n      }\\n      if (minIndex !== a) [arr[minIndex], arr[a]] = [arr[a], arr[minIndex]];\\n    }\\n  return arr;\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\nselectionSort(a);\\n</code></pre></div><h3 id=\\\"插入排序\\\"><a href=\\\"#插入排序\\\" class=\\\"header-anchor\\\">#</a> 插入排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>function insertionSort(arr) {\\n  var i,j,len = arr.length;\\n  for(i = 1;i &lt; len; i++) {\\n    for(j = 0; j &lt; i; j++) {\\n      if(arr[j] &gt; arr[i]) {\\n        arr.splice(j, 0, arr[i]);\\n        arr.splice(i+1,1);\\n      }\\n    }\\n  }\\n  return arr;\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\ninsertionSort(a);\\n</code></pre></div><h3 id=\\\"快速排序\\\"><a href=\\\"#快速排序\\\" class=\\\"header-anchor\\\">#</a> 快速排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>unction quickSort(arr) {\\n  var len = arr.length;\\n  if(len &lt;= 1) return arr;\\n  var left = [], right = [], mid = arr[0];\\n  for (var i = 1; i &lt; len; i++)\\n    if (arr[i] &lt; mid)\\n      left.push(arr[i]);\\n    else\\n      right.push(arr[i]);\\n  return [...quickSort(left), mid, ...quickSort(right)];\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\nquickSort(a);\\n</code></pre></div><h3 id=\\\"获取最小值到最大值之前的整数随机数\\\"><a href=\\\"#获取最小值到最大值之前的整数随机数\\\" class=\\\"header-anchor\\\">#</a> 获取最小值到最大值之前的整数随机数</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>function GetRandomNum(Min, Max) {\\n    var Range = Max - Min;\\n    var Rand = Math.random();\\n    return(Min + Math.round(Rand * Range));\\n}\\nvar num = GetRandomNum(1, 10);\\nconsole.log(num);\\n</code></pre></div>\")]);\n};\n\nvar staticRenderFns = [];\nexport { render, staticRenderFns };",{"version":3,"sources":["docs/pages/javascript/numSort.md"],"names":["render","_vm","_c","_self","staticClass","_ssrNode","staticRenderFns"],"mappings":"AAAA,IAAIA,SAAS,SAASA,MAAT,GAAiB;AAAC,MAAIC,MAAI,IAAR;AAAA,MAAaC,KAAGD,IAAIE,KAAJ,CAAUD,EAA1B;;AAA6B,SAAOA,GAAG,KAAH,EAAS;AAACE,iBAAY;AAAb,GAAT,EAAiC,CAACH,IAAII,QAAJ,CAAa,ihFAAb,CAAD,CAAjC,CAAP;AAC3D,CADD;;AAEA,IAAIC,kBAAkB,EAAtB;AAEA,SAASN,MAAT,EAAiBM,eAAjB","sourceRoot":"/Users/mypro/history/gitpro/hxl888.github.io","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"js排序算法\\\"><a href=\\\"#js排序算法\\\" class=\\\"header-anchor\\\">#</a> js排序算法</h1><h3 id=\\\"冒泡排序\\\"><a href=\\\"#冒泡排序\\\" class=\\\"header-anchor\\\">#</a> 冒泡排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>function bubbleSort(arr) {\\n    var len = arr.length, a, b;\\n    for (a = 0; a &lt; len; a++) {\\n        for (b = 0; b &lt; len - a - 1; b++) {\\n            if (arr[b] &gt; arr[b + 1]) {\\n                [arr[b], arr[b + 1]] = [arr[b + 1], arr[b]];\\n            }\\n        }\\n    }\\n    return arr;\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\nbubbleSort(a);\\n</code></pre></div><h3 id=\\\"选择排序\\\"><a href=\\\"#选择排序\\\" class=\\\"header-anchor\\\">#</a> 选择排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>var selectionSort = function (arr) {\\n  var len = arr.length, a, b, minIndex;\\n  for (a = 0; a &lt; len - 1; a++) {\\n   minIndex = a;\\n      for (b = a + 1; b &lt; len; b++) {\\n          if (arr[minIndex] &gt; arr[b]) minIndex = b;\\n      }\\n      if (minIndex !== a) [arr[minIndex], arr[a]] = [arr[a], arr[minIndex]];\\n    }\\n  return arr;\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\nselectionSort(a);\\n</code></pre></div><h3 id=\\\"插入排序\\\"><a href=\\\"#插入排序\\\" class=\\\"header-anchor\\\">#</a> 插入排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>function insertionSort(arr) {\\n  var i,j,len = arr.length;\\n  for(i = 1;i &lt; len; i++) {\\n    for(j = 0; j &lt; i; j++) {\\n      if(arr[j] &gt; arr[i]) {\\n        arr.splice(j, 0, arr[i]);\\n        arr.splice(i+1,1);\\n      }\\n    }\\n  }\\n  return arr;\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\ninsertionSort(a);\\n</code></pre></div><h3 id=\\\"快速排序\\\"><a href=\\\"#快速排序\\\" class=\\\"header-anchor\\\">#</a> 快速排序</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>unction quickSort(arr) {\\n  var len = arr.length;\\n  if(len &lt;= 1) return arr;\\n  var left = [], right = [], mid = arr[0];\\n  for (var i = 1; i &lt; len; i++)\\n    if (arr[i] &lt; mid)\\n      left.push(arr[i]);\\n    else\\n      right.push(arr[i]);\\n  return [...quickSort(left), mid, ...quickSort(right)];\\n}\\nvar a = [13,1,0,93,64,88,2,7,94,5,4];\\nquickSort(a);\\n</code></pre></div><h3 id=\\\"获取最小值到最大值之前的整数随机数\\\"><a href=\\\"#获取最小值到最大值之前的整数随机数\\\" class=\\\"header-anchor\\\">#</a> 获取最小值到最大值之前的整数随机数</h3><div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>function GetRandomNum(Min, Max) {\\n    var Range = Max - Min;\\n    var Rand = Math.random();\\n    return(Min + Math.round(Rand * Range));\\n}\\nvar num = GetRandomNum(1, 10);\\nconsole.log(num);\\n</code></pre></div>\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}]}