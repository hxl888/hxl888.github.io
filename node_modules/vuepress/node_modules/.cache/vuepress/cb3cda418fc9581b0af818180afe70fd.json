{"remainingRequest":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/mypro/history/gitpro/hxl888.github.io/docs/pages/gits/gitDetails.md?vue&type=template&id=0b5f1d37","dependencies":[{"path":"/Users/mypro/history/gitpro/hxl888.github.io/docs/pages/gits/gitDetails.md","mtime":1723100283625},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/babel-loader/lib/index.js","mtime":1723084153686},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1718962895631},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/index.js","mtime":1718962895631},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1723084153489}],"contextDependencies":[],"result":["var render = function render() {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _vm._m(0);\n};\n\nvar staticRenderFns = [function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c('div', {\n    staticClass: \"content\"\n  }, [_c('h1', {\n    attrs: {\n      \"id\": \"git\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#git\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" git\")]), _c('p', [_vm._v(\"拷贝ssh到服务器上\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"ssh-\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"copy-id\")]), _vm._v(\" root@188\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"131\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"134\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"233\\n\")])])]), _c('h1', {\n    attrs: {\n      \"id\": \"http-justcoding-iteye-com-blog-1830388-（转载网址，非本人原创）\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#http-justcoding-iteye-com-blog-1830388-（转载网址，非本人原创）\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" http://justcoding.iteye.com/blog/1830388 （转载网址，非本人原创）\")]), _c('p', [_vm._v(\"git 命令行设置\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\"配置使用git仓库的人员姓名\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global user\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"name \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"\\\"Your Name Comes Here\\\"\")]), _vm._v(\"  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\"配置使用git仓库的人员email\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global user\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"email you@yourdomain\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"example\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"com  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\"配置到缓存 默认15分钟\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global credential\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"helper cache   \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 修改缓存时间\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global credential\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"helper \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"'cache --timeout=3600'\")]), _vm._v(\"    \\n  \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global color\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"ui true  \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global alias\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"co checkout  \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global alias\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"ci commit  \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global alias\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"st status  \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global alias\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"br branch  \\ngit config \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"global core\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"editor \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"\\\"mate -w\\\"\")]), _vm._v(\"\\n\")])])]), _c('p', [_vm._v(\"查看、添加、提交、删除、找回，重置修改文件\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git help <command>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 显示command的help\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit show            \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 显示某次提交的内容\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit show \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token variable\"\n    }\n  }, [_vm._v(\"$id\")]), _vm._v(\" \\n   \\ngit co  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\" <file>   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 抛弃工作区修改\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit co  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 抛弃工作区修改\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n   \\ngit add <file>      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将工作文件修改提交到本地暂存区\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit add \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将所有修改过的工作文件提交暂存区\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\n   \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"rm\")]), _vm._v(\" <file>       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 从版本库中删除文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"rm\")]), _vm._v(\" <file> \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"cached  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 从版本库中删除文件，但不删除文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n   \\ngit reset <file>    \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 从暂存区恢复到工作文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit reset \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 从暂存区恢复到工作文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit reset \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"hard    \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n   \\ngit ci <file>  \\ngit ci \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit ci \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将git add\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\",\")]), _vm._v(\" git \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"rm\")]), _vm._v(\"和git ci等操作都合并在一起做\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit ci \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"am \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"\\\"some comments\\\"\")]), _vm._v(\"  \\ngit ci \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"amend      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 修改最后一次提交记录\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\n   \\ngit revert <\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token variable\"\n    }\n  }, [_vm._v(\"$id\")]), _vm._v(\">    \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 恢复某次提交的状态，恢复动作本身也创建了一次提交对象\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit revert HEAD     \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 恢复最后一次提交的状态\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n\")])])]), _c('p', [_vm._v(\"查看文件diff\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\" <file>     \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 比较当前文件和暂存区文件差异\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\" <\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token variable\"\n    }\n  }, [_vm._v(\"$id1\")]), _vm._v(\"> <\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token variable\"\n    }\n  }, [_vm._v(\"$id2\")]), _vm._v(\">   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 比较两次提交之间的差异\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\" <branch1>\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"<branch2> \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 在两个分支之间比较\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"staged   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 比较暂存区和版本库差异\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"cached   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 比较暂存区和版本库差异\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"stat     \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 仅仅比较统计信息\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n\")])])]), _c('p', [_vm._v(\"查看提交记录\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git log  \\ngit log <file>      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看该文件每次提交记录\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit log \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"p <file>   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看每次详细修改内容的\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit log \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"p \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"2       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看最近两次详细修改内容的\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit log \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"stat      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看提交统计信息\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('p', [_vm._v(\"取得Git仓库\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 初始化一个版本仓库\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit init  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" Clone远程版本库\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit clone git@xbc\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"me:wordpress\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 添加远程版本库origin，语法\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit remote add \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token namespace\"\n    }\n  }, [_vm._v(\"[shortname]\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token namespace\"\n    }\n  }, [_vm._v(\"[url]\")]), _vm._v(\"  \\ngit remote add origin git@xbc\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"me:wordpress\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程仓库\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit remote \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"v  \\n\")])])]), _c('p', [_vm._v(\"提交你的修改\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 添加当前修改的文件到暂存区\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit add \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 如果你自动追踪文件，包括你已经手动删除的，状态为Deleted的文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit add \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"u  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 提交你的修改  \\ngit commit –m \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"\\\"你的注释\\\"\")]), _vm._v(\"  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 推送你的更新到远程服务器\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\",\")]), _vm._v(\"语法为 git push \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"[\")]), _vm._v(\"远程名\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"]\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"[\")]), _vm._v(\"本地分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"]\")]), _vm._v(\":\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"[\")]), _vm._v(\"远程分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"]\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit push origin master  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看文件状态\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit status  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 跟踪新文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit add readme\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"txt  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 从当前跟踪列表移除文件，并完全删除\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"rm\")]), _vm._v(\" readme\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"txt  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 仅在暂存区删除，保留文件在当前目录，不再跟踪\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"rm\")]), _vm._v(\" –cached readme\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"txt  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 重命名文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"mv\")]), _vm._v(\" reademe\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"txt readme  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看提交的历史记录  \\ngit log  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 修改最后一次提交注释的，利用–amend参数\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit commit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"amend  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 忘记提交某些修改，下面的三条命令只会得到一个提交\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit commit –m &quot\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\";\")]), _vm._v(\"add readme\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"txt&quot\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\";\")]), _vm._v(\"  \\ngit add readme_forgotten  \\ngit commit –amend  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 假设你已经使用git add \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"，将修改过的文件a、b加到暂存区\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 现在你只想提交a文件，不想提交b文件，应该这样\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit reset HEAD b  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 取消对文件的修改  \\ngit checkout –\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\" readme\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"txt  \\n\")])])]), _c('p', [_vm._v(\"查看、切换、创建和删除分支\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git br \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"r           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit br <new_branch> \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 创建新的分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit br \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"v           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看各个分支最后提交信息\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit br \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"merged     \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看已经被合并到当前分支的分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit br \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"no-merged  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看尚未被合并到当前分支的分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\n   \\ngit co <branch>     \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 切换到某个分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit co \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"b <new_branch> \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 创建新的分支，并且切换过去\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit co \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"b <new_branch> <branch>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 基于branch创建新的new_branch\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n   \\ngit co \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token variable\"\n    }\n  }, [_vm._v(\"$id\")]), _vm._v(\"          \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit co \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token variable\"\n    }\n  }, [_vm._v(\"$id\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"b <new_branch>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 把某次历史提交记录checkout出来，创建成一个分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n   \\ngit br \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"d <branch>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 删除某个分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit br \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"D <branch>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 强制删除某个分支 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"(\")]), _vm._v(\"未被合并的分支被删除的时候需要强制\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\")\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n\")])])]), _c('p', [_vm._v(\"分支合并和rebase\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git merge <branch>               \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将branch分支合并到当前分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit merge origin/master \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"no-ff  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 不要Fast-Foward合并，这样可以生成merge提交\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n   \\ngit rebase master <branch>       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将master rebase到branch，相当于：\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit co <branch> && git rebase master && git co master && git merge <branch>  \\n\")])])]), _c('p', [_vm._v(\"Git补丁管理(方便在多台机器上开发同步时用)\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"diff\")]), _vm._v(\" > \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\"sync\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"patch         \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 生成补丁\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit apply \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\"sync\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"patch          \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 打补丁\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit apply \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"check \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\"sync\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"patch   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 测试补丁能否成功\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\n\")])])]), _c('p', [_vm._v(\"Git暂存管理\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git stash                        \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 暂存\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit stash list                   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 列所有stash\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit stash apply                  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 恢复暂存的内容\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit stash drop                   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 删除暂存区\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n\")])])]), _c('p', [_vm._v(\"Git远程分支管理\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git pull                         \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 抓取远程仓库所有分支更新并合并到本地\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit pull \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"no-ff                 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 抓取远程仓库所有分支更新并合并到本地，不要快进合并\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit fetch origin                 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 抓取远程仓库更新\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit merge origin/master          \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将远程主分支合并到本地当前分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit co \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"track origin/branch     \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 跟踪某个远程分支创建相应的本地分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit co \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"b <local_branch> origin/<remote_branch>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 基于远程分支创建本地分支，功能同上\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n   \\ngit push                         \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" push所有分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\" \\ngit push origin master           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将本地主分支推到远程主分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit push \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"u origin master        \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将本地主分支推到远程\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"(\")]), _vm._v(\"如无远程主分支则创建，用于初始化远程仓库\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\")\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\ngit push origin <local_branch>   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 创建远程分支， origin是远程仓库名\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit push origin <local_branch>:<remote_branch>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 创建远程分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit push origin :<remote_branch>  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 先删除本地分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"(\")]), _vm._v(\"git br \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"d <branch>\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\")\")]), _vm._v(\"，然后再push删除远程分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"  \\n\")])])]), _c('p', [_vm._v(\"基本的分支管理\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#创建一个分支  \")]), _vm._v(\"\\ngit branch iss53  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#切换工作目录到iss53  \")]), _vm._v(\"\\ngit chekcout iss53  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#将上面的命令合在一起，创建iss53分支并切换到iss53  \")]), _vm._v(\"\\ngit chekcout –b iss53  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#合并iss53分支，当前工作目录为master  \")]), _vm._v(\"\\ngit merge iss53  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#合并完成后，没有出现冲突，删除iss53分支  \")]), _vm._v(\"\\ngit branch –d iss53  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#拉去远程仓库的数据，语法为 git fetch [remote-name]  \")]), _vm._v(\"\\ngit fetch  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#fetch 会拉去最新的远程仓库数据，但不会自动到当前目录下，要自动合并  \")]), _vm._v(\"\\ngit pull  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#查看远程仓库的信息  \")]), _vm._v(\"\\ngit remote show origin  \\n  \\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token comment\"\n    }\n  }, [_vm._v(\"#建立本地的dev分支追踪远程仓库的develop分支  \")]), _vm._v(\"\\ngit checkout –b dev origin/develop  \\n\")])])]), _c('p', [_vm._v(\"Git远程仓库管理\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git remote \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"v                    \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程服务器地址和仓库名称  \\ngit remote show origin           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程服务器仓库状态  \\ngit remote add origin git@ github:robbin/robbin_site\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git         \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 添加远程仓库地址  \\ngit remote \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"set-url\")]), _vm._v(\" origin git@ github\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"com:robbin/robbin_site\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 设置远程仓库地址\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"(\")]), _vm._v(\"用于修改远程仓库地址\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\")\")]), _vm._v(\"  \\ngit remote \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"rm\")]), _vm._v(\" <repository>       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 删除远程仓库  \\n\")])])]), _c('p', [_vm._v(\"创建远程仓库\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git clone \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"bare robbin_site robbin_site\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 用带版本的项目创建纯版本仓库  \\nscp \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"r my_project\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git git@ git\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"csdn\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"net:~      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 将纯仓库上传到服务器上  \\n   \\nmkdir robbin_site\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git && cd robbin_site\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git && git \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"bare init \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 在服务器创建纯仓库  \\ngit remote add origin git@ github\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"com:robbin/robbin_site\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"git    \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 设置远程仓库地址  \\ngit push \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"u origin master                                      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 客户端首次提交  \\ngit push \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"u origin develop  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 首次将本地develop分支提交到远程develop分支，并且track  \\n   \\ngit remote \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"set-head\")]), _vm._v(\" origin master   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 设置远程仓库的HEAD指向master分支  \\n\")])])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"set-upstream\")]), _vm._v(\" master origin/master  \\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"set-upstream\")]), _vm._v(\" develop origin/develop  \\n\")])])]), _c('h1', {\n    attrs: {\n      \"id\": \"以下为经常用到的\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#以下为经常用到的\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 以下为经常用到的====================\")]), _c('h1', {\n    attrs: {\n      \"id\": \"项目git应用\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#项目git应用\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 项目git应用\")]), _c('h3', {\n    attrs: {\n      \"id\": \"流程：\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#流程：\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 流程：\")]), _c('ol', [_c('li', [_vm._v(\"在develop分支做开发；\")]), _c('li', [_vm._v(\"develop要merge到主分支上，保持master为最新分支；\")]), _c('li', [_vm._v(\"每次发版确定，根据需求打版开分支；\")]), _c('li', [_vm._v(\"在上线没问题的情况下，对项目打tag版本标签，要保证与最新分支相同；\")]), _c('li', [_vm._v(\"上线失败，回滚以版本稳定进行回滚\")])]), _c('h4', {\n    attrs: {\n      \"id\": \"master-相当于develop，每次开发同步于此分支，就是最新的\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#master-相当于develop，每次开发同步于此分支，就是最新的\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" master      相当于develop，每次开发同步于此分支，就是最新的\")]), _c('h4', {\n    attrs: {\n      \"id\": \"develop-在此分支开发\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#develop-在此分支开发\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" develop     在此分支开发\")]), _c('h4', {\n    attrs: {\n      \"id\": \"pc-v3-0-确定上线分支打版-规范：-项目简称-v-大版本号-大模块添加-小的模块变动\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#pc-v3-0-确定上线分支打版-规范：-项目简称-v-大版本号-大模块添加-小的模块变动\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" pc-v3.0.*   确定上线分支打版  规范：[项目简称]-v[大版本号].[大模块添加].[小的模块变动]\")]), _c('h3', {\n    attrs: {\n      \"id\": \"减少回滚：\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#减少回滚：\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 减少回滚：\")]), _c('ol', [_c('li', [_vm._v(\"协商沟通好怎么分配；\")]), _c('li', [_vm._v(\"每个人负责的项目不同；\")]), _c('li', [_vm._v(\"模块化开发；\")])]), _c('h1', {\n    attrs: {\n      \"id\": \"git-用法\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#git-用法\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" git 用法\")]), _c('h2', {\n    attrs: {\n      \"id\": \"克隆\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#克隆\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 克隆\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git clone giturl链接\\n\")])])]), _c('h2', {\n    attrs: {\n      \"id\": \"分支\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#分支\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 分支\")]), _c('ol', [_c('li', [_c('strong', [_vm._v(\"查看分支\")])])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git branch      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看本地分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"r   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看所有分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"v   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看各个分支最后一个提交对象的信息\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"2\"\n    }\n  }, [_c('li', [_c('strong', [_vm._v(\"新建/切换分支\")])])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git branch branch_name                      \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 本地新建分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit checkout branch_name                    \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 切换分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit checkout \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"b branch_name                 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 新建分支并切换到branch_name分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit push origin branch_name:branch_name     \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 把本地分支提交远程   git push origin dev:master 把本地分支dev提交到远程master分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit checkout \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"b branch_name origin/branch_name \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 切换本地分支，与远程同步\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"3\"\n    }\n  }, [_c('li', [_c('strong', [_vm._v(\"关联/跟踪分支\")])])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 跟踪dev\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"set-upstream\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"to=origin/dev\\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token function\"\n    }\n  }, [_vm._v(\"set-upstream\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"to=dev\\ngit push \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"u origin dev  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 设置origin为默认主机，将本地的dev分支推送到origin主机\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 取消对master的跟踪\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"unset-upstream master\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"4\"\n    }\n  }, [_c('li', [_c('strong', [_vm._v(\"提交分支\")])])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git add index\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"html                  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 添加指定文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit add \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"                           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 添加所有文件\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit commit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"m \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"'提交备注'\")]), _vm._v(\"            \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 提交备注\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit commit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"m \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"'提交备注'\")]), _vm._v(\"         \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 添加并提交\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit push \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token namespace\"\n    }\n  }, [_vm._v(\"[orgin master]\")]), _vm._v(\"             \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 推送\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"5\"\n    }\n  }, [_c('li', [_c('strong', [_vm._v(\"合并分支\")])])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git checkout master                 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 切换主分支master\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit merge dev                       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 把dev分支合并到matser分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit push origin master              \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 推到远程\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _vm._v(\"\\ngit push origin dev:master          \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 把本地分支dev提交到远程master分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit checkout master                 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 切换到主分支master\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit pull origin master              \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 把远程主分支master拉到本地\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"6\"\n    }\n  }, [_c('li', [_c('strong', [_vm._v(\"删除远程分支\")]), _vm._v(\"（分两步）\")])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"r \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"d orgin/分支名\\n        \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"r 查看远程分支\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n        \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"d 删除\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n        \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"D 强制删除\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit push origin :branch_name \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 或则 git push origin \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"delete branch_name\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"7\"\n    }\n  }, [_c('li', [_c('strong', [_vm._v(\"关于回滚\")]), _vm._v(\"\\n本地\")])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 撤销修改\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit checkout fileName\\ngit checkout \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 取消缓存\\ngit add \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit status\\ngit reset HEAD fileName\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 取消缓存，撤销修改\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit reset HEAD fileName\\ngit checkout fileName\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 修改commit，不产生新的commit\\ngit add demo\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"txt\\ngit commit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"amend \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"m \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"'提交内容'\")]), _vm._v(\"\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 提交多个commit，想删除某个commit\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit reset \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"[\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"hard\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _vm._v(\"soft\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _vm._v(\"mixed\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _vm._v(\"merge\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _vm._v(\"keep\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"]\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token namespace\"\n    }\n  }, [_vm._v(\"[commit|HEAD]\")]), _vm._v(\"\\n\\n\")])])]), _c('p', [_vm._v(\"远程\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 撤销到指定commit\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit log fileName\\ngit checkout commitid fileName\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 删除最后一次远程提交\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit revert HEAD\\ngit push origin master\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _vm._v(\"\\ngit reset \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"hard HEAD^\\ngit push origin master\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"*\")]), _vm._v(\" revert是放弃指定提交的修改，但是会生成一次新的提交，需要填写提交注释，以前的历史记录都在；\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"*\")]), _vm._v(\" reset是指将HEAD指针指到指定提交，历史记录中不会出现放弃的提交记录。\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 回滚到某次提交\\ngit log\\ngit revert commitid\\n\")])])]), _c('p', [_vm._v(\"删除某次提交\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git log \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"oneline \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"n5       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程近5条\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit rebase \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"i \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"\\\"commitid\\\"\")]), _vm._v(\"^   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看第几条到head\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n进入编辑状态，删除要删除的行就可以\\ngit push origin master \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"f   \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 提交\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('p', [_vm._v(\"重命名分支\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"av\\ngit push \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"delete origin 分支名\\ngit branch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"m 分支名 远程分支\\ngit push origin 远程分支\\ngit fetch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"p origin  修剪远程分支的本地“缓存”\\n\\n\")])])]), _c('p', [_vm._v(\"修剪远程分支的本地“缓存”\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git fetch \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"p origin  \\n\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"8\"\n    }\n  }, [_c('li', [_c('strong', [_vm._v(\"其他\")])])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git remote \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"v       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程url\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit fetch           \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 同步远程服务器上的数据到本地\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit log \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"oneline \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"n5 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看远程提交的近5条\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('h2', {\n    attrs: {\n      \"id\": \"生成tag\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#生成tag\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 生成tag\")]), _c('ol', [_c('li', [_vm._v(\"查看tag\")])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git tag\\ngit tag \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"n              \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 查看tag详情\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit tag \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"l v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"*\")]), _vm._v(\"       \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 展现v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"*\")]), _vm._v(\"下的所有版本，如v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1、v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"2、v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"3等\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"2\"\n    }\n  }, [_c('li', [_vm._v(\"创建tag\")])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git tag v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1\\t \\t\\t\\t\\t\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 直接版本，轻量级版本\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit tag \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"m \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"'备注内容'\")]), _vm._v(\"\\t\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 带详细信息的\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit tag \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"s v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1 \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"m \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"'备注内容'\")]), _vm._v(\"\\t\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 带签名的tag（需要有GPG私钥）\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit tag \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1_patch 5ac6794\\t\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 带commit的一次提交，也是打补丁，不要和上个版本名重复\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"3\"\n    }\n  }, [_c('li', [_vm._v(\"删除tag\")])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git tag \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"d  v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1\\ngit push origin :refs/tags/标签名\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"4\"\n    }\n  }, [_c('li', [_vm._v(\"验证tag\")])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git tag \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"v v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1\\t\\t\\t\\t\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 如果有GPG私钥可以验证\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('ol', {\n    attrs: {\n      \"start\": \"5\"\n    }\n  }, [_c('li', [_vm._v(\"上传tag\")])]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"git push origin v1\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"0\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"1\\t\\t\\t\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 提交指定版本到远程\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\ngit push origin \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"tags\\t\\t\\t\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 提交所有的本地tag到远程\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\")])])]), _c('h3', {\n    attrs: {\n      \"id\": \"关于git-stash的应用总结\"\n    }\n  }, [_c('a', {\n    staticClass: \"header-anchor\",\n    attrs: {\n      \"href\": \"#关于git-stash的应用总结\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" 关于git stash的应用总结\")]), _c('div', {\n    staticClass: \"language-powershell extra-class\"\n  }, [_c('pre', {\n    pre: true,\n    attrs: {\n      \"class\": \"language-powershell\"\n    }\n  }, [_c('code', [_vm._v(\"Step1\\n\\n　　新增 git stash save \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"\\\"message\\\"\")]), _vm._v(\" \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" 对于在项目里加入了代码新文件的开发来说，\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a选项才会将新加入的代码文件同时放入暂存区 类似于 git commit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"a \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\"m \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"\\\"\\\"\")]), _vm._v(\"\\nStep2\\n\\n　　查看列表 git stash list\\nStep3\\n\\n　　应用的话是 git stash apply stash@\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"{\")]), _vm._v(\"id\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"}\")]), _vm._v(\" \\nStep4\\n\\n　　关于 git stash pop 也可以将list中最新的提取出来，但是不同于apply\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\",\")]), _vm._v(\" pop 会把list 中删除，后期不易恢复\\nStep5\\n\\n　　如果真的git stash pop 了，也是可以恢复的。\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\" git log \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"graph \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"--\")]), _vm._v(\"oneline $\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"(\")]), _vm._v(\"git fsck \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"|\")]), _vm._v(\" awk \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token string\"\n    }\n  }, [_vm._v(\"'/dangling commit/ {print $3}'\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\")\")]), _vm._v(\" 找到对应的commitId\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"\\n\\n　　具体参考 http:\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token operator\"\n    }\n  }, [_vm._v(\"/\")]), _vm._v(\"www\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"jianshu\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\".\")]), _vm._v(\"com/p/9a316b546808\\nStep6\\n\\n　　删除某个stash的话 git stash drop stash@\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"{\")]), _vm._v(\"id\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"token punctuation\"\n    }\n  }, [_vm._v(\"}\")]), _vm._v(\" \\nStep7\\n\\n　　删除全部的stash list 直接通过 git stash clear\\n\\n\\n\")])])])]);\n}];\nexport { render, staticRenderFns };",null]}