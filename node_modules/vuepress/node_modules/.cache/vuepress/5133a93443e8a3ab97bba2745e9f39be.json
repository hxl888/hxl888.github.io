{"remainingRequest":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/mypro/history/gitpro/hxl888.github.io/docs/pages/gits/gitDetails.md?vue&type=template&id=0b5f1d37","dependencies":[{"path":"/Users/mypro/history/gitpro/hxl888.github.io/docs/pages/gits/gitDetails.md","mtime":1723100283625},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/babel-loader/lib/index.js","mtime":1723084153686},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1718962895631},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1723084153564},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vue-loader/lib/index.js","mtime":1718962895631},{"path":"/Users/mypro/history/gitpro/hxl888.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1723084153489}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"git\"><a class=\"header-anchor\" href=\"#git\">#</a> git</h1>\n<p>拷贝ssh到服务器上</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>ssh-<span class=\"token function\">copy-id</span> root@188<span class=\"token punctuation\">.</span>131<span class=\"token punctuation\">.</span>134<span class=\"token punctuation\">.</span>233\n</code></pre>\n<!--beforeend--></div><!--afterend--><h1 id=\"http-justcoding-iteye-com-blog-1830388-（转载网址，非本人原创）\"><a class=\"header-anchor\" href=\"#http-justcoding-iteye-com-blog-1830388-（转载网址，非本人原创）\">#</a> http://justcoding.iteye.com/blog/1830388 （转载网址，非本人原创）</h1>\n<p>git 命令行设置</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code><span class=\"token operator\">/</span><span class=\"token operator\">/</span>配置使用git仓库的人员姓名<span class=\"token punctuation\">.</span>\ngit config <span class=\"token operator\">--</span>global user<span class=\"token punctuation\">.</span>name <span class=\"token string\">\"Your Name Comes Here\"</span>  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span>配置使用git仓库的人员email<span class=\"token punctuation\">.</span>\ngit config <span class=\"token operator\">--</span>global user<span class=\"token punctuation\">.</span>email you@yourdomain<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>com  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span>配置到缓存 默认15分钟<span class=\"token punctuation\">.</span> \ngit config <span class=\"token operator\">--</span>global credential<span class=\"token punctuation\">.</span>helper cache   \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 修改缓存时间<span class=\"token punctuation\">.</span>  \ngit config <span class=\"token operator\">--</span>global credential<span class=\"token punctuation\">.</span>helper <span class=\"token string\">'cache --timeout=3600'</span>    \n  \ngit config <span class=\"token operator\">--</span>global color<span class=\"token punctuation\">.</span>ui true  \ngit config <span class=\"token operator\">--</span>global alias<span class=\"token punctuation\">.</span>co checkout  \ngit config <span class=\"token operator\">--</span>global alias<span class=\"token punctuation\">.</span>ci commit  \ngit config <span class=\"token operator\">--</span>global alias<span class=\"token punctuation\">.</span>st status  \ngit config <span class=\"token operator\">--</span>global alias<span class=\"token punctuation\">.</span>br branch  \ngit config <span class=\"token operator\">--</span>global core<span class=\"token punctuation\">.</span>editor <span class=\"token string\">\"mate -w\"</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>查看、添加、提交、删除、找回，重置修改文件</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git help &lt;command>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 显示command的help<span class=\"token punctuation\">.</span> \ngit show            <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 显示某次提交的内容<span class=\"token punctuation\">.</span>  \ngit show <span class=\"token variable\">$id</span> \n   \ngit co  <span class=\"token operator\">--</span> &lt;file>   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 抛弃工作区修改<span class=\"token punctuation\">.</span>  \ngit co  <span class=\"token punctuation\">.</span>           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 抛弃工作区修改<span class=\"token punctuation\">.</span>  \n   \ngit add &lt;file>      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将工作文件修改提交到本地暂存区<span class=\"token punctuation\">.</span>  \ngit add <span class=\"token punctuation\">.</span>           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将所有修改过的工作文件提交暂存区<span class=\"token punctuation\">.</span> \n   \ngit <span class=\"token function\">rm</span> &lt;file>       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 从版本库中删除文件<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">rm</span> &lt;file> <span class=\"token operator\">--</span>cached  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 从版本库中删除文件，但不删除文件<span class=\"token punctuation\">.</span>  \n   \ngit reset &lt;file>    <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 从暂存区恢复到工作文件<span class=\"token punctuation\">.</span>  \ngit reset <span class=\"token operator\">--</span> <span class=\"token punctuation\">.</span>      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 从暂存区恢复到工作文件<span class=\"token punctuation\">.</span>  \ngit reset <span class=\"token operator\">--</span>hard    <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改<span class=\"token punctuation\">.</span>  \n   \ngit ci &lt;file>  \ngit ci <span class=\"token punctuation\">.</span>  \ngit ci <span class=\"token operator\">-</span>a           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将git add<span class=\"token punctuation\">,</span> git <span class=\"token function\">rm</span>和git ci等操作都合并在一起做<span class=\"token punctuation\">.</span>  \ngit ci <span class=\"token operator\">-</span>am <span class=\"token string\">\"some comments\"</span>  \ngit ci <span class=\"token operator\">--</span>amend      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 修改最后一次提交记录<span class=\"token punctuation\">.</span> \n   \ngit revert &lt;<span class=\"token variable\">$id</span>>    <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 恢复某次提交的状态，恢复动作本身也创建了一次提交对象<span class=\"token punctuation\">.</span>  \ngit revert HEAD     <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 恢复最后一次提交的状态<span class=\"token punctuation\">.</span>  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>查看文件diff</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git <span class=\"token function\">diff</span> &lt;file>     <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 比较当前文件和暂存区文件差异<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">diff</span>  \ngit <span class=\"token function\">diff</span> &lt;<span class=\"token variable\">$id1</span>> &lt;<span class=\"token variable\">$id2</span>>   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 比较两次提交之间的差异<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">diff</span> &lt;branch1><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>&lt;branch2> <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 在两个分支之间比较<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">diff</span> <span class=\"token operator\">--</span>staged   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 比较暂存区和版本库差异<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">diff</span> <span class=\"token operator\">--</span>cached   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 比较暂存区和版本库差异<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">diff</span> <span class=\"token operator\">--</span>stat     <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 仅仅比较统计信息<span class=\"token punctuation\">.</span>  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>查看提交记录</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git log  \ngit log &lt;file>      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看该文件每次提交记录<span class=\"token punctuation\">.</span>  \ngit log <span class=\"token operator\">-</span>p &lt;file>   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看每次详细修改内容的<span class=\"token function\">diff</span><span class=\"token punctuation\">.</span> \ngit log <span class=\"token operator\">-</span>p <span class=\"token operator\">-</span>2       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看最近两次详细修改内容的<span class=\"token function\">diff</span><span class=\"token punctuation\">.</span>  \ngit log <span class=\"token operator\">--</span>stat      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看提交统计信息<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>取得Git仓库</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code><span class=\"token operator\">/</span><span class=\"token operator\">/</span> 初始化一个版本仓库<span class=\"token punctuation\">.</span>\ngit init  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> Clone远程版本库<span class=\"token punctuation\">.</span>  \ngit clone git@xbc<span class=\"token punctuation\">.</span>me:wordpress<span class=\"token punctuation\">.</span>git  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 添加远程版本库origin，语法<span class=\"token punctuation\">.</span>\ngit remote add <span class=\"token namespace\">[shortname]</span> <span class=\"token namespace\">[url]</span>  \ngit remote add origin git@xbc<span class=\"token punctuation\">.</span>me:wordpress<span class=\"token punctuation\">.</span>git  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程仓库<span class=\"token punctuation\">.</span>  \ngit remote <span class=\"token operator\">-</span>v  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>提交你的修改</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code><span class=\"token operator\">/</span><span class=\"token operator\">/</span> 添加当前修改的文件到暂存区<span class=\"token punctuation\">.</span>  \ngit add <span class=\"token punctuation\">.</span>  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 如果你自动追踪文件，包括你已经手动删除的，状态为Deleted的文件<span class=\"token punctuation\">.</span>  \ngit add <span class=\"token operator\">-</span>u  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 提交你的修改  \ngit commit –m <span class=\"token string\">\"你的注释\"</span>  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 推送你的更新到远程服务器<span class=\"token punctuation\">,</span>语法为 git push <span class=\"token punctuation\">[</span>远程名<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>本地分支<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>远程分支<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>  \ngit push origin master  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看文件状态<span class=\"token punctuation\">.</span>\ngit status  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 跟踪新文件<span class=\"token punctuation\">.</span>  \ngit add readme<span class=\"token punctuation\">.</span>txt  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 从当前跟踪列表移除文件，并完全删除<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">rm</span> readme<span class=\"token punctuation\">.</span>txt  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 仅在暂存区删除，保留文件在当前目录，不再跟踪<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">rm</span> –cached readme<span class=\"token punctuation\">.</span>txt  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 重命名文件<span class=\"token punctuation\">.</span>  \ngit <span class=\"token function\">mv</span> reademe<span class=\"token punctuation\">.</span>txt readme  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看提交的历史记录  \ngit log  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 修改最后一次提交注释的，利用–amend参数<span class=\"token punctuation\">.</span> \ngit commit <span class=\"token operator\">--</span>amend  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 忘记提交某些修改，下面的三条命令只会得到一个提交<span class=\"token punctuation\">.</span>  \ngit commit –m &amp;quot<span class=\"token punctuation\">;</span>add readme<span class=\"token punctuation\">.</span>txt&amp;quot<span class=\"token punctuation\">;</span>  \ngit add readme_forgotten  \ngit commit –amend  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 假设你已经使用git add <span class=\"token punctuation\">.</span>，将修改过的文件a、b加到暂存区<span class=\"token punctuation\">.</span>  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 现在你只想提交a文件，不想提交b文件，应该这样<span class=\"token punctuation\">.</span>  \ngit reset HEAD b  \n  \n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 取消对文件的修改  \ngit checkout –<span class=\"token operator\">-</span> readme<span class=\"token punctuation\">.</span>txt  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>查看、切换、创建和删除分支</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git br <span class=\"token operator\">-</span>r           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程分支<span class=\"token punctuation\">.</span>  \ngit br &lt;new_branch> <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 创建新的分支<span class=\"token punctuation\">.</span>  \ngit br <span class=\"token operator\">-</span>v           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看各个分支最后提交信息<span class=\"token punctuation\">.</span>  \ngit br <span class=\"token operator\">--</span>merged     <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看已经被合并到当前分支的分支<span class=\"token punctuation\">.</span> \ngit br <span class=\"token operator\">--</span>no-merged  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看尚未被合并到当前分支的分支<span class=\"token punctuation\">.</span> \n   \ngit co &lt;branch>     <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 切换到某个分支<span class=\"token punctuation\">.</span>  \ngit co <span class=\"token operator\">-</span>b &lt;new_branch> <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 创建新的分支，并且切换过去<span class=\"token punctuation\">.</span>  \ngit co <span class=\"token operator\">-</span>b &lt;new_branch> &lt;branch>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 基于branch创建新的new_branch<span class=\"token punctuation\">.</span>  \n   \ngit co <span class=\"token variable\">$id</span>          <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除<span class=\"token punctuation\">.</span> \ngit co <span class=\"token variable\">$id</span> <span class=\"token operator\">-</span>b &lt;new_branch>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 把某次历史提交记录checkout出来，创建成一个分支<span class=\"token punctuation\">.</span>  \n   \ngit br <span class=\"token operator\">-</span>d &lt;branch>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 删除某个分支<span class=\"token punctuation\">.</span>  \ngit br <span class=\"token operator\">-</span>D &lt;branch>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 强制删除某个分支 <span class=\"token punctuation\">(</span>未被合并的分支被删除的时候需要强制<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>分支合并和rebase</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git merge &lt;branch>               <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将branch分支合并到当前分支<span class=\"token punctuation\">.</span>  \ngit merge origin/master <span class=\"token operator\">--</span>no-ff  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 不要Fast-Foward合并，这样可以生成merge提交<span class=\"token punctuation\">.</span>  \n   \ngit rebase master &lt;branch>       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将master rebase到branch，相当于：<span class=\"token punctuation\">.</span>  \ngit co &lt;branch> &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch>  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Git补丁管理(方便在多台机器上开发同步时用)</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git <span class=\"token function\">diff</span> > <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>sync<span class=\"token punctuation\">.</span>patch         <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 生成补丁<span class=\"token punctuation\">.</span>  \ngit apply <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>sync<span class=\"token punctuation\">.</span>patch          <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 打补丁<span class=\"token punctuation\">.</span> \ngit apply <span class=\"token operator\">--</span>check <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>sync<span class=\"token punctuation\">.</span>patch   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 测试补丁能否成功<span class=\"token punctuation\">.</span> \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Git暂存管理</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git stash                        <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 暂存<span class=\"token punctuation\">.</span> \ngit stash list                   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 列所有stash<span class=\"token punctuation\">.</span> \ngit stash apply                  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 恢复暂存的内容<span class=\"token punctuation\">.</span> \ngit stash drop                   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 删除暂存区<span class=\"token punctuation\">.</span>  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Git远程分支管理</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git pull                         <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 抓取远程仓库所有分支更新并合并到本地<span class=\"token punctuation\">.</span> \ngit pull <span class=\"token operator\">--</span>no-ff                 <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 抓取远程仓库所有分支更新并合并到本地，不要快进合并<span class=\"token punctuation\">.</span> \ngit fetch origin                 <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 抓取远程仓库更新<span class=\"token punctuation\">.</span>\ngit merge origin/master          <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将远程主分支合并到本地当前分支<span class=\"token punctuation\">.</span> \ngit co <span class=\"token operator\">--</span>track origin/branch     <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 跟踪某个远程分支创建相应的本地分支<span class=\"token punctuation\">.</span>  \ngit co <span class=\"token operator\">-</span>b &lt;local_branch> origin/&lt;remote_branch>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 基于远程分支创建本地分支，功能同上<span class=\"token punctuation\">.</span>  \n   \ngit push                         <span class=\"token operator\">/</span><span class=\"token operator\">/</span> push所有分支<span class=\"token punctuation\">.</span> \ngit push origin master           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将本地主分支推到远程主分支<span class=\"token punctuation\">.</span>  \ngit push <span class=\"token operator\">-</span>u origin master        <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将本地主分支推到远程<span class=\"token punctuation\">(</span>如无远程主分支则创建，用于初始化远程仓库<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>  \ngit push origin &lt;local_branch>   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 创建远程分支， origin是远程仓库名<span class=\"token punctuation\">.</span>\ngit push origin &lt;local_branch>:&lt;remote_branch>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 创建远程分支<span class=\"token punctuation\">.</span>\ngit push origin :&lt;remote_branch>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 先删除本地分支<span class=\"token punctuation\">(</span>git br <span class=\"token operator\">-</span>d &lt;branch><span class=\"token punctuation\">)</span>，然后再push删除远程分支<span class=\"token punctuation\">.</span>  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>基本的分支管理</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code><span class=\"token comment\">#创建一个分支  </span>\ngit branch iss53  \n  \n<span class=\"token comment\">#切换工作目录到iss53  </span>\ngit chekcout iss53  \n  \n<span class=\"token comment\">#将上面的命令合在一起，创建iss53分支并切换到iss53  </span>\ngit chekcout –b iss53  \n  \n<span class=\"token comment\">#合并iss53分支，当前工作目录为master  </span>\ngit merge iss53  \n  \n<span class=\"token comment\">#合并完成后，没有出现冲突，删除iss53分支  </span>\ngit branch –d iss53  \n  \n<span class=\"token comment\">#拉去远程仓库的数据，语法为 git fetch [remote-name]  </span>\ngit fetch  \n  \n<span class=\"token comment\">#fetch 会拉去最新的远程仓库数据，但不会自动到当前目录下，要自动合并  </span>\ngit pull  \n  \n<span class=\"token comment\">#查看远程仓库的信息  </span>\ngit remote show origin  \n  \n<span class=\"token comment\">#建立本地的dev分支追踪远程仓库的develop分支  </span>\ngit checkout –b dev origin/develop  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Git远程仓库管理</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git remote <span class=\"token operator\">-</span>v                    <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程服务器地址和仓库名称  \ngit remote show origin           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程服务器仓库状态  \ngit remote add origin git@ github:robbin/robbin_site<span class=\"token punctuation\">.</span>git         <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 添加远程仓库地址  \ngit remote <span class=\"token function\">set-url</span> origin git@ github<span class=\"token punctuation\">.</span>com:robbin/robbin_site<span class=\"token punctuation\">.</span>git <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 设置远程仓库地址<span class=\"token punctuation\">(</span>用于修改远程仓库地址<span class=\"token punctuation\">)</span>  \ngit remote <span class=\"token function\">rm</span> &lt;repository>       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 删除远程仓库  \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>创建远程仓库</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git clone <span class=\"token operator\">--</span>bare robbin_site robbin_site<span class=\"token punctuation\">.</span>git  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 用带版本的项目创建纯版本仓库  \nscp <span class=\"token operator\">-</span>r my_project<span class=\"token punctuation\">.</span>git git@ git<span class=\"token punctuation\">.</span>csdn<span class=\"token punctuation\">.</span>net:~      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 将纯仓库上传到服务器上  \n   \nmkdir robbin_site<span class=\"token punctuation\">.</span>git &amp;&amp; cd robbin_site<span class=\"token punctuation\">.</span>git &amp;&amp; git <span class=\"token operator\">--</span>bare init <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 在服务器创建纯仓库  \ngit remote add origin git@ github<span class=\"token punctuation\">.</span>com:robbin/robbin_site<span class=\"token punctuation\">.</span>git    <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 设置远程仓库地址  \ngit push <span class=\"token operator\">-</span>u origin master                                      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 客户端首次提交  \ngit push <span class=\"token operator\">-</span>u origin develop  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 首次将本地develop分支提交到远程develop分支，并且track  \n   \ngit remote <span class=\"token function\">set-head</span> origin master   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 设置远程仓库的HEAD指向master分支  \n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git branch <span class=\"token operator\">--</span><span class=\"token function\">set-upstream</span> master origin/master  \ngit branch <span class=\"token operator\">--</span><span class=\"token function\">set-upstream</span> develop origin/develop  \n</code></pre>\n<!--beforeend--></div><!--afterend--><h1 id=\"以下为经常用到的\"><a class=\"header-anchor\" href=\"#以下为经常用到的\">#</a> 以下为经常用到的====================</h1>\n<h1 id=\"项目git应用\"><a class=\"header-anchor\" href=\"#项目git应用\">#</a> 项目git应用</h1>\n<h3 id=\"流程：\"><a class=\"header-anchor\" href=\"#流程：\">#</a> 流程：</h3>\n<ol>\n<li>在develop分支做开发；</li>\n<li>develop要merge到主分支上，保持master为最新分支；</li>\n<li>每次发版确定，根据需求打版开分支；</li>\n<li>在上线没问题的情况下，对项目打tag版本标签，要保证与最新分支相同；</li>\n<li>上线失败，回滚以版本稳定进行回滚</li>\n</ol>\n<h4 id=\"master-相当于develop，每次开发同步于此分支，就是最新的\"><a class=\"header-anchor\" href=\"#master-相当于develop，每次开发同步于此分支，就是最新的\">#</a> master      相当于develop，每次开发同步于此分支，就是最新的</h4>\n<h4 id=\"develop-在此分支开发\"><a class=\"header-anchor\" href=\"#develop-在此分支开发\">#</a> develop     在此分支开发</h4>\n<h4 id=\"pc-v3-0-确定上线分支打版-规范：-项目简称-v-大版本号-大模块添加-小的模块变动\"><a class=\"header-anchor\" href=\"#pc-v3-0-确定上线分支打版-规范：-项目简称-v-大版本号-大模块添加-小的模块变动\">#</a> pc-v3.0.*   确定上线分支打版  规范：[项目简称]-v[大版本号].[大模块添加].[小的模块变动]</h4>\n<h3 id=\"减少回滚：\"><a class=\"header-anchor\" href=\"#减少回滚：\">#</a> 减少回滚：</h3>\n<ol>\n<li>协商沟通好怎么分配；</li>\n<li>每个人负责的项目不同；</li>\n<li>模块化开发；</li>\n</ol>\n<h1 id=\"git-用法\"><a class=\"header-anchor\" href=\"#git-用法\">#</a> git 用法</h1>\n<h2 id=\"克隆\"><a class=\"header-anchor\" href=\"#克隆\">#</a> 克隆</h2>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git clone giturl链接\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"分支\"><a class=\"header-anchor\" href=\"#分支\">#</a> 分支</h2>\n<ol>\n<li><strong>查看分支</strong></li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git branch      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看本地分支<span class=\"token punctuation\">.</span>\ngit branch <span class=\"token operator\">-</span>r   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程分支<span class=\"token punctuation\">.</span>\ngit branch <span class=\"token operator\">-</span>a   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看所有分支<span class=\"token punctuation\">.</span>\ngit branch <span class=\"token operator\">-</span>v   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看各个分支最后一个提交对象的信息<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li><strong>新建/切换分支</strong></li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git branch branch_name                      <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 本地新建分支<span class=\"token punctuation\">.</span>\ngit checkout branch_name                    <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 切换分支<span class=\"token punctuation\">.</span>\ngit checkout <span class=\"token operator\">-</span>b branch_name                 <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 新建分支并切换到branch_name分支<span class=\"token punctuation\">.</span>\ngit push origin branch_name:branch_name     <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 把本地分支提交远程   git push origin dev:master 把本地分支dev提交到远程master分支<span class=\"token punctuation\">.</span>\ngit checkout <span class=\"token operator\">-</span>b branch_name origin/branch_name <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 切换本地分支，与远程同步<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"3\">\n<li><strong>关联/跟踪分支</strong></li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code><span class=\"token operator\">/</span><span class=\"token operator\">/</span> 跟踪dev<span class=\"token punctuation\">.</span>\ngit branch <span class=\"token operator\">--</span><span class=\"token function\">set-upstream</span><span class=\"token operator\">-</span>to=origin/dev\ngit branch <span class=\"token operator\">--</span><span class=\"token function\">set-upstream</span><span class=\"token operator\">-</span>to=dev\ngit push <span class=\"token operator\">-</span>u origin dev  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 设置origin为默认主机，将本地的dev分支推送到origin主机<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 取消对master的跟踪<span class=\"token punctuation\">.</span>\ngit branch <span class=\"token operator\">--</span>unset-upstream master\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"4\">\n<li><strong>提交分支</strong></li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git add index<span class=\"token punctuation\">.</span>html                  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 添加指定文件<span class=\"token punctuation\">.</span>\ngit add <span class=\"token punctuation\">.</span>                           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 添加所有文件<span class=\"token punctuation\">.</span>\ngit commit <span class=\"token operator\">-</span>m <span class=\"token string\">'提交备注'</span>            <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 提交备注<span class=\"token punctuation\">.</span>\ngit commit <span class=\"token operator\">-</span>a <span class=\"token operator\">-</span>m <span class=\"token string\">'提交备注'</span>         <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 添加并提交<span class=\"token punctuation\">.</span>\ngit push <span class=\"token namespace\">[orgin master]</span>             <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 推送<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"5\">\n<li><strong>合并分支</strong></li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git checkout master                 <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 切换主分支master<span class=\"token punctuation\">.</span>\ngit merge dev                       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 把dev分支合并到matser分支<span class=\"token punctuation\">.</span>\ngit push origin master              <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 推到远程<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span>\ngit push origin dev:master          <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 把本地分支dev提交到远程master分支<span class=\"token punctuation\">.</span>\ngit checkout master                 <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 切换到主分支master<span class=\"token punctuation\">.</span>\ngit pull origin master              <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 把远程主分支master拉到本地<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"6\">\n<li><strong>删除远程分支</strong>（分两步）</li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git branch <span class=\"token operator\">-</span>r <span class=\"token operator\">-</span>d orgin/分支名\n        <span class=\"token operator\">/</span><span class=\"token operator\">/</span> <span class=\"token operator\">-</span>r 查看远程分支<span class=\"token punctuation\">.</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">/</span> <span class=\"token operator\">-</span>d 删除<span class=\"token punctuation\">.</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">/</span> <span class=\"token operator\">-</span>D 强制删除<span class=\"token punctuation\">.</span>\ngit push origin :branch_name <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 或则 git push origin <span class=\"token operator\">--</span>delete branch_name\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"7\">\n<li><strong>关于回滚</strong>\n本地</li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code><span class=\"token operator\">/</span><span class=\"token operator\">/</span> 撤销修改<span class=\"token punctuation\">.</span>\ngit checkout fileName\ngit checkout <span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 取消缓存\ngit add <span class=\"token punctuation\">.</span>\ngit status\ngit reset HEAD fileName\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 取消缓存，撤销修改<span class=\"token punctuation\">.</span>\ngit reset HEAD fileName\ngit checkout fileName\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 修改commit，不产生新的commit\ngit add demo<span class=\"token punctuation\">.</span>txt\ngit commit <span class=\"token operator\">--</span>amend <span class=\"token operator\">-</span>m <span class=\"token string\">'提交内容'</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 提交多个commit，想删除某个commit<span class=\"token punctuation\">.</span>\ngit reset <span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>hard<span class=\"token punctuation\">|</span>soft<span class=\"token punctuation\">|</span>mixed<span class=\"token punctuation\">|</span>merge<span class=\"token punctuation\">|</span>keep<span class=\"token punctuation\">]</span> <span class=\"token namespace\">[commit|HEAD]</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>远程</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code><span class=\"token operator\">/</span><span class=\"token operator\">/</span> 撤销到指定commit<span class=\"token punctuation\">.</span>\ngit log fileName\ngit checkout commitid fileName\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 删除最后一次远程提交<span class=\"token punctuation\">.</span>\ngit revert HEAD\ngit push origin master\n<span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span>\ngit reset <span class=\"token operator\">--</span>hard HEAD^\ngit push origin master\n<span class=\"token operator\">*</span> revert是放弃指定提交的修改，但是会生成一次新的提交，需要填写提交注释，以前的历史记录都在；\n<span class=\"token operator\">*</span> reset是指将HEAD指针指到指定提交，历史记录中不会出现放弃的提交记录。\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 回滚到某次提交\ngit log\ngit revert commitid\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>删除某次提交</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git log <span class=\"token operator\">--</span>oneline <span class=\"token operator\">-</span>n5       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程近5条<span class=\"token punctuation\">.</span>\ngit rebase <span class=\"token operator\">-</span>i <span class=\"token string\">\"commitid\"</span>^   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看第几条到head<span class=\"token punctuation\">.</span>\n进入编辑状态，删除要删除的行就可以\ngit push origin master <span class=\"token operator\">-</span>f   <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 提交<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>重命名分支</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git branch <span class=\"token operator\">-</span>av\ngit push <span class=\"token operator\">--</span>delete origin 分支名\ngit branch <span class=\"token operator\">-</span>m 分支名 远程分支\ngit push origin 远程分支\ngit fetch <span class=\"token operator\">-</span>p origin  修剪远程分支的本地“缓存”\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>修剪远程分支的本地“缓存”</p>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git fetch <span class=\"token operator\">-</span>p origin  \n\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"8\">\n<li><strong>其他</strong></li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git remote <span class=\"token operator\">-</span>v       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程url<span class=\"token punctuation\">.</span>\ngit fetch           <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 同步远程服务器上的数据到本地<span class=\"token punctuation\">.</span>\ngit log <span class=\"token operator\">--</span>oneline <span class=\"token operator\">-</span>n5 <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看远程提交的近5条<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"生成tag\"><a class=\"header-anchor\" href=\"#生成tag\">#</a> 生成tag</h2>\n<ol>\n<li>查看tag</li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git tag\ngit tag <span class=\"token operator\">-</span>n              <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 查看tag详情<span class=\"token punctuation\">.</span>\ngit tag <span class=\"token operator\">-</span>l v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>       <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 展现v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>下的所有版本，如v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1、v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>2、v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>3等<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>创建tag</li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git tag v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1\t \t\t\t\t<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 直接版本，轻量级版本<span class=\"token punctuation\">.</span>\ngit tag <span class=\"token operator\">-</span>a v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1 <span class=\"token operator\">-</span>m <span class=\"token string\">'备注内容'</span>\t<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 带详细信息的<span class=\"token punctuation\">.</span>\ngit tag <span class=\"token operator\">-</span>s v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1 <span class=\"token operator\">-</span>m <span class=\"token string\">'备注内容'</span>\t<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 带签名的tag（需要有GPG私钥）<span class=\"token punctuation\">.</span>\ngit tag <span class=\"token operator\">-</span>a v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1_patch 5ac6794\t<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 带commit的一次提交，也是打补丁，不要和上个版本名重复<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"3\">\n<li>删除tag</li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git tag <span class=\"token operator\">-</span>d  v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1\ngit push origin :refs/tags/标签名\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"4\">\n<li>验证tag</li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git tag <span class=\"token operator\">-</span>v v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1\t\t\t\t<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 如果有GPG私钥可以验证<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"5\">\n<li>上传tag</li>\n</ol>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>git push origin v1<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1\t\t\t<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 提交指定版本到远程<span class=\"token punctuation\">.</span>\ngit push origin <span class=\"token operator\">--</span>tags\t\t\t<span class=\"token operator\">/</span><span class=\"token operator\">/</span> 提交所有的本地tag到远程<span class=\"token punctuation\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"关于git-stash的应用总结\"><a class=\"header-anchor\" href=\"#关于git-stash的应用总结\">#</a> 关于git stash的应用总结</h3>\n<!--beforebegin--><div class=\"language-powershell extra-class\"><!--afterbegin--><pre v-pre class=\"language-powershell\"><code>Step1\n\n　　新增 git stash save <span class=\"token operator\">-</span>a <span class=\"token string\">\"message\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 对于在项目里加入了代码新文件的开发来说，<span class=\"token operator\">-</span>a选项才会将新加入的代码文件同时放入暂存区 类似于 git commit <span class=\"token operator\">-</span>a <span class=\"token operator\">-</span>m <span class=\"token string\">\"\"</span>\nStep2\n\n　　查看列表 git stash list\nStep3\n\n　　应用的话是 git stash apply stash@<span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span> \nStep4\n\n　　关于 git stash pop 也可以将list中最新的提取出来，但是不同于apply<span class=\"token punctuation\">,</span> pop 会把list 中删除，后期不易恢复\nStep5\n\n　　如果真的git stash pop 了，也是可以恢复的。<span class=\"token operator\">/</span><span class=\"token operator\">/</span> git log <span class=\"token operator\">--</span>graph <span class=\"token operator\">--</span>oneline $<span class=\"token punctuation\">(</span>git fsck <span class=\"token punctuation\">|</span> awk <span class=\"token string\">'/dangling commit/ {print $3}'</span><span class=\"token punctuation\">)</span> 找到对应的commitId<span class=\"token punctuation\">.</span>\n\n　　具体参考 http:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>jianshu<span class=\"token punctuation\">.</span>com/p/9a316b546808\nStep6\n\n　　删除某个stash的话 git stash drop stash@<span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span> \nStep7\n\n　　删除全部的stash list 直接通过 git stash clear\n\n\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}